General minor things we want to implement:
  ☐ error handlinging in our custom stream
  ✔ new filter for #RunOnHashtaggyThings @done (13-07-23 14:44)
  ✔ some way of detecting of two writes overlap, and using that to automatically trim database @done (13-07-26 18:35)
New Data Handling:
  ☐ add a custom 'cache' class
  ☐ strongly seperate cache and persistent storage
  ☐ multiproccessing and queues for transitions between data states

New API:
   ✔ working 'pagination' API @done (13-07-20 22:01)
   ☐ more efficient data retrieval
   ✔ 'hits newer then x' api method @done (13-07-23 14:42)
   ✔ some kind of 'info' endpoint @done (13-07-23 18:31)
post queues:
  ☐ we want post queues, basically


bug fixes:

    ☐ handle corrupt database exceptions


Okay, So now we have to think about maintenance. Deleting items seems tricky.is it faster without indexes? 
 ✔ google around about deleting items from sql. @done (13-08-15 18:40)
   if there's no real way to make that more efficient, we should test the speed of just copying items we want to keep into a new database
 ☐ time moving items from one database to another
   if /that/ doesn't work, we should look into storing in seperate tables?

